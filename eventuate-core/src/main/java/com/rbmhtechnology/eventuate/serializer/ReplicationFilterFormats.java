/*
 * Copyright 2015 - 2016 Red Bull Media House GmbH <http://www.redbullmediahouse.com> - all rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReplicationFilterFormats.proto

package com.rbmhtechnology.eventuate.serializer;

public final class ReplicationFilterFormats {
  private ReplicationFilterFormats() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ReplicationFilterTreeFormatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .ReplicationFilterTreeFormat.NodeType nodeType = 1;
    /**
     * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
     */
    boolean hasNodeType();
    /**
     * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
     */
    com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType getNodeType();

    // repeated .ReplicationFilterTreeFormat children = 2;
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> 
        getChildrenList();
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat getChildren(int index);
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    int getChildrenCount();
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    java.util.List<? extends com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder getChildrenOrBuilder(
        int index);

    // optional .PayloadFormat filter = 3;
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    boolean hasFilter();
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat getFilter();
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder getFilterOrBuilder();
  }
  /**
   * Protobuf type {@code ReplicationFilterTreeFormat}
   */
  public static final class ReplicationFilterTreeFormat extends
      com.google.protobuf.GeneratedMessage
      implements ReplicationFilterTreeFormatOrBuilder {
    // Use ReplicationFilterTreeFormat.newBuilder() to construct.
    private ReplicationFilterTreeFormat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReplicationFilterTreeFormat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReplicationFilterTreeFormat defaultInstance;
    public static ReplicationFilterTreeFormat getDefaultInstance() {
      return defaultInstance;
    }

    public ReplicationFilterTreeFormat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReplicationFilterTreeFormat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType value = com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                nodeType_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                children_ = new java.util.ArrayList<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat>();
                mutable_bitField0_ |= 0x00000002;
              }
              children_.add(input.readMessage(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = filter_.toBuilder();
              }
              filter_ = input.readMessage(com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filter_);
                filter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_ReplicationFilterTreeFormat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_ReplicationFilterTreeFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.class, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder.class);
    }

    public static com.google.protobuf.Parser<ReplicationFilterTreeFormat> PARSER =
        new com.google.protobuf.AbstractParser<ReplicationFilterTreeFormat>() {
      public ReplicationFilterTreeFormat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReplicationFilterTreeFormat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReplicationFilterTreeFormat> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code ReplicationFilterTreeFormat.NodeType}
     */
    public enum NodeType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LEAF = 1;</code>
       */
      LEAF(0, 1),
      /**
       * <code>AND = 2;</code>
       */
      AND(1, 2),
      /**
       * <code>OR = 3;</code>
       */
      OR(2, 3),
      ;

      /**
       * <code>LEAF = 1;</code>
       */
      public static final int LEAF_VALUE = 1;
      /**
       * <code>AND = 2;</code>
       */
      public static final int AND_VALUE = 2;
      /**
       * <code>OR = 3;</code>
       */
      public static final int OR_VALUE = 3;


      public final int getNumber() { return value; }

      public static NodeType valueOf(int value) {
        switch (value) {
          case 1: return LEAF;
          case 2: return AND;
          case 3: return OR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NodeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NodeType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeType>() {
              public NodeType findValueByNumber(int number) {
                return NodeType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.getDescriptor().getEnumTypes().get(0);
      }

      private static final NodeType[] VALUES = values();

      public static NodeType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private NodeType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ReplicationFilterTreeFormat.NodeType)
    }

    private int bitField0_;
    // required .ReplicationFilterTreeFormat.NodeType nodeType = 1;
    public static final int NODETYPE_FIELD_NUMBER = 1;
    private com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType nodeType_;
    /**
     * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
     */
    public boolean hasNodeType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
     */
    public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType getNodeType() {
      return nodeType_;
    }

    // repeated .ReplicationFilterTreeFormat children = 2;
    public static final int CHILDREN_FIELD_NUMBER = 2;
    private java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> children_;
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    public java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> getChildrenList() {
      return children_;
    }
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    public java.util.List<? extends com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
     *
     * <pre>
     * set if nodeType == AND | OR
     * </pre>
     */
    public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    // optional .PayloadFormat filter = 3;
    public static final int FILTER_FIELD_NUMBER = 3;
    private com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat filter_;
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    public boolean hasFilter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    public com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat getFilter() {
      return filter_;
    }
    /**
     * <code>optional .PayloadFormat filter = 3;</code>
     *
     * <pre>
     * set if nodeType == LEAF
     * </pre>
     */
    public com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder getFilterOrBuilder() {
      return filter_;
    }

    private void initFields() {
      nodeType_ = com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType.LEAF;
      children_ = java.util.Collections.emptyList();
      filter_ = com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNodeType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getChildrenCount(); i++) {
        if (!getChildren(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, nodeType_.getNumber());
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(2, children_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, filter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, nodeType_.getNumber());
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, children_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, filter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReplicationFilterTreeFormat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_ReplicationFilterTreeFormat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_ReplicationFilterTreeFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.class, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder.class);
      }

      // Construct using com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChildrenFieldBuilder();
          getFilterFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        nodeType_ = com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType.LEAF;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          childrenBuilder_.clear();
        }
        if (filterBuilder_ == null) {
          filter_ = com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.getDefaultInstance();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_ReplicationFilterTreeFormat_descriptor;
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat getDefaultInstanceForType() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.getDefaultInstance();
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat build() {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat buildPartial() {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat result = new com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nodeType_ = nodeType_;
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (filterBuilder_ == null) {
          result.filter_ = filter_;
        } else {
          result.filter_ = filterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat) {
          return mergeFrom((com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat other) {
        if (other == com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.getDefaultInstance()) return this;
        if (other.hasNodeType()) {
          setNodeType(other.getNodeType());
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00000002);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNodeType()) {
          
          return false;
        }
        for (int i = 0; i < getChildrenCount(); i++) {
          if (!getChildren(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ReplicationFilterTreeFormat.NodeType nodeType = 1;
      private com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType nodeType_ = com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType.LEAF;
      /**
       * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
       */
      public boolean hasNodeType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType getNodeType() {
        return nodeType_;
      }
      /**
       * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
       */
      public Builder setNodeType(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ReplicationFilterTreeFormat.NodeType nodeType = 1;</code>
       */
      public Builder clearNodeType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeType_ = com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.NodeType.LEAF;
        onChanged();
        return this;
      }

      // repeated .ReplicationFilterTreeFormat children = 2;
      private java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          children_ = new java.util.ArrayList<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat>(children_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder> childrenBuilder_;

      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder setChildren(
          int index, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder setChildren(
          int index, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder addChildren(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder addChildren(
          int index, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder addChildren(
          com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder addChildren(
          int index, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          super.addAll(values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public java.util.List<? extends com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.getDefaultInstance());
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.getDefaultInstance());
      }
      /**
       * <code>repeated .ReplicationFilterTreeFormat children = 2;</code>
       *
       * <pre>
       * set if nodeType == AND | OR
       * </pre>
       */
      public java.util.List<com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormat.Builder, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.ReplicationFilterTreeFormatOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }

      // optional .PayloadFormat filter = 3;
      private com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat filter_ = com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder> filterBuilder_;
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat getFilter() {
        if (filterBuilder_ == null) {
          return filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public Builder setFilter(com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
          onChanged();
        } else {
          filterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public Builder setFilter(
          com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
          onChanged();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public Builder mergeFilter(com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat value) {
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              filter_ != com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.getDefaultInstance()) {
            filter_ =
              com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.newBuilder(filter_).mergeFrom(value).buildPartial();
          } else {
            filter_ = value;
          }
          onChanged();
        } else {
          filterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public Builder clearFilter() {
        if (filterBuilder_ == null) {
          filter_ = com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.getDefaultInstance();
          onChanged();
        } else {
          filterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder getFilterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      public com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_;
        }
      }
      /**
       * <code>optional .PayloadFormat filter = 3;</code>
       *
       * <pre>
       * set if nodeType == LEAF
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormat.Builder, com.rbmhtechnology.eventuate.serializer.CommonFormats.PayloadFormatOrBuilder>(
                  filter_,
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ReplicationFilterTreeFormat)
    }

    static {
      defaultInstance = new ReplicationFilterTreeFormat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ReplicationFilterTreeFormat)
  }

  public interface NoFilterFormatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code NoFilterFormat}
   *
   * <pre>
   * no fields
   * </pre>
   */
  public static final class NoFilterFormat extends
      com.google.protobuf.GeneratedMessage
      implements NoFilterFormatOrBuilder {
    // Use NoFilterFormat.newBuilder() to construct.
    private NoFilterFormat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NoFilterFormat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NoFilterFormat defaultInstance;
    public static NoFilterFormat getDefaultInstance() {
      return defaultInstance;
    }

    public NoFilterFormat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NoFilterFormat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_NoFilterFormat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_NoFilterFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.class, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.Builder.class);
    }

    public static com.google.protobuf.Parser<NoFilterFormat> PARSER =
        new com.google.protobuf.AbstractParser<NoFilterFormat>() {
      public NoFilterFormat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NoFilterFormat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NoFilterFormat> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code NoFilterFormat}
     *
     * <pre>
     * no fields
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_NoFilterFormat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_NoFilterFormat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.class, com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.Builder.class);
      }

      // Construct using com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.internal_static_NoFilterFormat_descriptor;
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat getDefaultInstanceForType() {
        return com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.getDefaultInstance();
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat build() {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat buildPartial() {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat result = new com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat) {
          return mergeFrom((com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat other) {
        if (other == com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rbmhtechnology.eventuate.serializer.ReplicationFilterFormats.NoFilterFormat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NoFilterFormat)
    }

    static {
      defaultInstance = new NoFilterFormat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:NoFilterFormat)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ReplicationFilterTreeFormat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ReplicationFilterTreeFormat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_NoFilterFormat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_NoFilterFormat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036ReplicationFilterFormats.proto\032\023Common" +
      "Formats.proto\"\315\001\n\033ReplicationFilterTreeF" +
      "ormat\0227\n\010nodeType\030\001 \002(\0162%.ReplicationFil" +
      "terTreeFormat.NodeType\022.\n\010children\030\002 \003(\013" +
      "2\034.ReplicationFilterTreeFormat\022\036\n\006filter" +
      "\030\003 \001(\0132\016.PayloadFormat\"%\n\010NodeType\022\010\n\004LE" +
      "AF\020\001\022\007\n\003AND\020\002\022\006\n\002OR\020\003\"\020\n\016NoFilterFormatB" +
      "+\n\'com.rbmhtechnology.eventuate.serializ" +
      "erH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ReplicationFilterTreeFormat_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ReplicationFilterTreeFormat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ReplicationFilterTreeFormat_descriptor,
              new java.lang.String[] { "NodeType", "Children", "Filter", });
          internal_static_NoFilterFormat_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_NoFilterFormat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_NoFilterFormat_descriptor,
              new java.lang.String[] { });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.rbmhtechnology.eventuate.serializer.CommonFormats.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
